import T "types";

module{

  type Result<Ok, Err> = { #ok: Ok; #err: Err};

  let noopErr = func op_0C_(exCon: T.ExecutionContext, exVar: T.ExecutionVariables, engineInstance: T.Engine) : Result<T.ExecutionVariables, Text> { #err("") };

  // Unused
  public let op_0C_ = noopErr;
  public let op_0D_ = noopErr;
  public let op_0E_ = noopErr;
  public let op_0F_ = noopErr;
  public let op_1E_ = noopErr;
  public let op_1F_ = noopErr;
  public let op_21_ = noopErr;
  public let op_22_ = noopErr;
  public let op_23_ = noopErr;
  public let op_24_ = noopErr;
  public let op_25_ = noopErr;
  public let op_26_ = noopErr;
  public let op_27_ = noopErr;
  public let op_28_ = noopErr;
  public let op_29_ = noopErr;
  public let op_2A_ = noopErr;
  public let op_2B_ = noopErr;
  public let op_2C_ = noopErr;
  public let op_2D_ = noopErr;
  public let op_2E_ = noopErr;
  public let op_2F_ = noopErr;
  public let op_4B_ = noopErr;
  public let op_4C_ = noopErr;
  public let op_4D_ = noopErr;
  public let op_4E_ = noopErr;
  public let op_4F_ = noopErr;
  public let op_A5_ = noopErr;
  public let op_A6_ = noopErr;
  public let op_A7_ = noopErr;
  public let op_A8_ = noopErr;
  public let op_A9_ = noopErr;
  public let op_AA_ = noopErr;
  public let op_AB_ = noopErr;
  public let op_AC_ = noopErr;
  public let op_AD_ = noopErr;
  public let op_AE_ = noopErr;
  public let op_AF_ = noopErr;
  public let op_B0_ = noopErr;
  public let op_B1_ = noopErr;
  public let op_B2_ = noopErr;
  public let op_B3_ = noopErr;
  public let op_B4_ = noopErr;
  public let op_B5_ = noopErr;
  public let op_B6_ = noopErr;
  public let op_B7_ = noopErr;
  public let op_B8_ = noopErr;
  public let op_B9_ = noopErr;
  public let op_BA_ = noopErr;
  public let op_BB_ = noopErr;
  public let op_BC_ = noopErr;
  public let op_BD_ = noopErr;
  public let op_BE_ = noopErr;
  public let op_BF_ = noopErr;
  public let op_C0_ = noopErr;
  public let op_C1_ = noopErr;
  public let op_C2_ = noopErr;
  public let op_C3_ = noopErr;
  public let op_C4_ = noopErr;
  public let op_C5_ = noopErr;
  public let op_C6_ = noopErr;
  public let op_C7_ = noopErr;
  public let op_C8_ = noopErr;
  public let op_C9_ = noopErr;
  public let op_CA_ = noopErr;
  public let op_CB_ = noopErr;
  public let op_CC_ = noopErr;
  public let op_CD_ = noopErr;
  public let op_CE_ = noopErr;
  public let op_CF_ = noopErr;
  public let op_D0_ = noopErr;
  public let op_D1_ = noopErr;
  public let op_D2_ = noopErr;
  public let op_D3_ = noopErr;
  public let op_D4_ = noopErr;
  public let op_D5_ = noopErr;
  public let op_D6_ = noopErr;
  public let op_D7_ = noopErr;
  public let op_D8_ = noopErr;
  public let op_D9_ = noopErr;
  public let op_DA_ = noopErr;
  public let op_DB_ = noopErr;
  public let op_DC_ = noopErr;
  public let op_DD_ = noopErr;
  public let op_DE_ = noopErr;
  public let op_DF_ = noopErr;
  public let op_E0_ = noopErr;
  public let op_E1_ = noopErr;
  public let op_E2_ = noopErr;
  public let op_E3_ = noopErr;
  public let op_E4_ = noopErr;
  public let op_E5_ = noopErr;
  public let op_E6_ = noopErr;
  public let op_E7_ = noopErr;
  public let op_E8_ = noopErr;
  public let op_E9_ = noopErr;
  public let op_EA_ = noopErr;
  public let op_EB_ = noopErr;
  public let op_EC_ = noopErr;
  public let op_ED_ = noopErr;
  public let op_EE_ = noopErr;
  public let op_EF_ = noopErr;
  public let op_F6_ = noopErr;
  public let op_F7_ = noopErr;
  public let op_F8_ = noopErr;
  public let op_F9_ = noopErr;
}

